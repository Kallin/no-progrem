/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

class Problem2 extends Problem {

    final static MAX = 4000000
    final static KNOWN_ANSWER = 4613732

    def solution1() {
        def temp
        def prevTerm = 1
        def currTerm = 2
        def sumOfEvens = 0
        while (currTerm < MAX) {
            if (currTerm % 2 == 0)
                sumOfEvens += currTerm
            temp = currTerm + prevTerm
            prevTerm = currTerm
            currTerm = temp
        }
        return sumOfEvens
    }

    @Override
    def getKnownAnswer() {
        return KNOWN_ANSWER
    }
}
